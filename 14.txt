1)****************************************************************************

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
char sfname[10],tfname[10],instr[80],w1[10],w2[60],w3[10],w4[10],mdt[50][4][20];
FILE *sfp,*tfp;	int mc=0,pntcnt,mec;
struct MNT
{	char mname[10]; int pp,kp,pntptr,mdtstart,mdtend;}mnt[10];
struct PNT
{	char pname[20],defval[20],actval[20];}pnt[40];
int searchpnt(char w[])
{
	int i;	for(i=mnt[mc].pntptr ; i<mnt[mc].pntptr+mnt[mc].pp+mnt[mc].kp; i++)
				if(!stricmp(pnt[i].pname,w))	return i;
				return -1;
}
int searchkpt(int pos,char w[])
{
	int i,j;	for(i=mnt[pos].pntptr+mnt[pos].pp,j=0 ; j<mnt[pos].kp ; i++,j++)
				if(!stricmp(w,pnt[i].pname))	return i;
				return -1;
}
int searchmnt(char w[])
{
	int i;	for(i=0; i<mc ; i++)	if(!stricmp(mnt[i].mname,w))	return i;
				return -1;
}
void MDP()
{
	int n;	fgets(instr,80,sfp);
	n=sscanf(instr,"%s %s",w1,w2);
	printf("%s\t%s\n",w1,w2);
	getch();
	strcpy(mnt[mc].mname,w1);
	if(n==2)
	{  int i,j;char temp[10]; mnt[mc].pntptr=pntcnt;

		for(p=strtok(input,",") ; p ;  )
		{
			
			if(!strchr(p,'='))
			{
				puts(p);
				strcpy(pnt[pntcnt].pname,p);
				strcpy(pnt[pntcnt++].actval,p); mnt[mc].pp++;
			}
			p=strtok(NULL,",");
		}
		
	}
	mnt[mc+1].pntptr=pntcnt;
	fgets(instr,80,sfp);	sscanf(instr,"%s %s %s %s",w1,w2,w3,w4);
	mnt[mc].mdtstart=mec;
	for( ; stricmp(w1,"mend") ; mec++)
	{   int v;char str[10];
		if(w1[0]!='&')	strcpy(mdt[mec][0],w1);
		else	if(searchpnt(w1)!=-1)
				{  v=searchpnt(w1);
					itoa(v,str,10);
					strcpy(mdt[mec][0],str);
				}else printf("varialble is not defined in macro prototype.\n");
		if(w2[0]!='&')	strcpy(mdt[mec][1],w2);
		else	if((v=searchpnt(w2))!=-1)
				{
					v=searchpnt(w2);
					itoa(v,str,10);
					strcpy(mdt[mec][1],str);
				}else printf("varialble is not defined in macro prototype.\n");
		if(w3[0]!='&')	strcpy(mdt[mec][2],w3);
		else	if((v=searchpnt(w3))!=-1)
				{  v=searchpnt(w3);
					itoa(v,str,10);
					strcpy(mdt[mec][2],str);
				}else printf("varialble is not defined in macro prototype.\n");
		if(w4[0]!='&')	strcpy(mdt[mec][3],w4);
		else	if((v=searchpnt(w4))!=-1)
				{  v=searchpnt(w4);
					itoa(v,str,10);
					strcpy(mdt[mec][3],str);
				}else printf("varialble is not defined in macro prototype.\n");
		fgets(instr,80,sfp);	sscanf(instr,"%s %s %s %s",w1,w2,w3,w4);
	}
	mnt[mc].mdtend=mec;
}
void displaypnt()
{
	 int i; 	printf("\n---------Parameter Name Table--------\npname\tdefval\tactval\n");
				for(i=0 ; i<pntcnt ; i++)	printf("%s\t%s\t%s\n",pnt[i].pname,pnt[i].defval,pnt[i].actval);
				getch();
}
void display()
{
	int i,j;
	printf("\n---------Macro Name Table--------\nmname\tpp\tkp\tpntptr\tmdtstart\tmdtend\n");
	for(i=0 ; i<mc ; i++)	printf("%s\t%d\t%d\t%d\t%d\t%d\n",mnt[i].mname,mnt[i].pp,mnt[i].kp,mnt[i].pntptr,mnt[i].mdtstart,mnt[i].mdtend);
	getch();
	printf("\n---------Macro Definition Table--------\n");
	for(i=0 ; i<mec ; i++)
	{
		for(j=0 ; j<4 ; j++)	printf("%s\t",mdt[i][j]);
		printf("\n");
	}
	getch();
}
int main(int argc, char *argv[])
{
	clrscr();
	if(argc==2)
		strcpy(sfname,argv[1]);
	else
	{	printf("Enter source file : "); scanf("%s",sfname);
		printf("Enter target file : "); scanf("%s",tfname);
	}
	
	sfp=fopen(sfname,"r");
	tfp=fopen(tfname,"w+");
	if(sfp==NULL)	{	printf("File not exist.\n"); exit(0);	}
	else
	{	while(!feof(sfp))
		{
			int n;fgets(instr,80,sfp); n=sscanf(instr,"%s %s",w1,w2);
			if(!feof(sfp))
			{  
				if(stricmp(w1,"macro")==0)		{	MDP(); mc++;	}
				else	fprintf(tfp,"%s",instr);
			}
		}
	}display();
	fclose(sfp);fclose(tfp);
	return 0;
}


2)****************************************************************************

#include<stdio.h>
#include<sys/types.h>
#include<sys/stat.h>
#include<unistd.h>
#include<dirent.h>
#include<fcntl.h>

void typeline(char *s, char *fn)
{
	int handle,i=0,cnt=0,n;
	char ch;
	if((handle=open(fn,O_RDONLY))==-1)
	{
		printf("File %s not found\n",fn);
		return;
	}
	if(strcmp(s,"a")==0)
	{
		while(read(handle,&ch,1)!=0)
			printf("%c",ch);
		close(handle);
		return;
	}
	n=atoi(s);
	if(n>0)
	{
		while(read(handle,&ch,1)!=0)
		{
			if(ch=='\n')
				i++;
			if(i==n)
				break;
			printf("%c",ch);
		}
		printf("\n");
		close(handle);
		return;
	}
	if(n<0)
	{
		while(read(handle,&ch,1)!=0)
		{
			if(ch=='\n')
				cnt++;
		}
		lseek(handle,0,SEEK_SET);
		while(read(handle,&ch,1)!=0)
		{
			if(ch=='\n')
				i++;
			if(i==cnt+n-1)
				break;
		}
		while(read(handle,&ch,1)!=0)
			printf("%c",ch);
		printf("\n");
		close(handle);
	}
}

main()
{
	char command[80],t1[20],t2[20],t3[20],t4[20];
	int n;
	system("clear");
	while(1)
	{
		printf("myShell$");
		fflush(stdin);
		fgets(command,80,stdin);
		n = sscanf(command,"%s %s %s %s",t1,t2,t3,t4);
		switch(n)
		{
		case 1:
			if(!fork())
			{
				execlp(t1,t1,NULL);
				perror(t1);
			}
			break;
		case 2:
			if(!fork())
			{
				execlp(t1,t1,t2,NULL);
				perror(t1);
			}
			break;
		case 3:
			if(strcmp(t1,"typeline")==0)
				typeline(t2,t3);
			else
			{
				if(!fork())
				{
					execlp(t1,t1,t2,t3,NULL);
					perror(t1);
				}
			}
			break;
		case 4:
			if(!fork())
			{
				execlp(t1,t1,t2,t3,t4,NULL);
				perror(t1);
			}
		}
	}
}
